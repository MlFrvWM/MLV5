local Lib = loadstring(game:HttpGet("https://raw.githubusercontent.com/shlexware/Kavo-UI-Library/main/source.lua"))()
local UI = Lib.CreateLib("SN PRIVATE V5", "Ocean")

local plr = game.Players.LocalPlayer
local rs = game:GetService("ReplicatedStorage")
local remote = rs:WaitForChild("RemoteEvent")
local wl, selected, plrList = {}, nil, {}

local vu = game:GetService("VirtualUser")
plr.Idled:Connect(function()
   vu:Button2Down(Vector2.new(), workspace.CurrentCamera.CFrame)
   task.wait(1)
   vu:Button2Up(Vector2.new(), workspace.CurrentCamera.CFrame)
end)

local function kill(t)
    if t and t.Character and t.Character:FindFirstChild("HumanoidRootPart") then
        plr.Character.HumanoidRootPart.CFrame = t.Character.HumanoidRootPart.CFrame
        remote:FireServer("AttackPlayer", t)
    end
end

local function isWL(t)
    return wl[t.Name] == true
end

local main = UI:NewTab("Combat"):NewSection("Combate")

main:NewToggle("Kill All", "Ataca todos (exceto whitelist)", function(state)
    _G.KillAll = state
    while _G.KillAll do
        for _, t in pairs(game.Players:GetPlayers()) do
            if t ~= plr and t.Character and not isWL(t) then
                kill(t)
            end
        end
        task.wait(1)
    end
end)

local dd
local function refreshList()
    local new = {}
    for _, p in pairs(game.Players:GetPlayers()) do
        if p ~= plr then
            table.insert(new, p.Name)
        end
    end
    plrList = new
    if dd then dd:Refresh(new) end
end

dd = main:NewDropdown("Selecionar jogador", "Escolha um jogador", plrList, function(name)
    selected = game.Players:FindFirstChild(name)
end)

task.spawn(function()
    while true do
        refreshList()
        task.wait(5)
    end
end)

main:NewButton("Kill Target", "Mata jogador selecionado", function()
    if selected then kill(selected) end
end)

main:NewButton("Whitelist Target", "Protege jogador", function()
    if selected then wl[selected.Name] = true end
end)

main:NewButton("Unwhitelist Target", "Remove proteção", function()
    if selected then wl[selected.Name] = nil end
end)

main:NewToggle("Auto Punch (sem animação)", "Soco automático", function(state)
    _G.AutoPunch = state
    while _G.AutoPunch do
        remote:FireServer("GainStrength")
        task.wait(0.1)
    end
end)

main:NewToggle("Auto Equip Punch", "Equipa ferramenta automaticamente", function(state)
    _G.AutoEquip = state
    while _G.AutoEquip do
        local tool = plr.Backpack:FindFirstChild("Punch") or plr.Backpack:FindFirstChildWhichIsA("Tool")
        if tool then
            plr.Character.Humanoid:EquipTool(tool)
        end
        task.wait(1)
    end
end)

local tp = UI:NewTab("Teleports"):NewSection("Ilhas")
local locs = {
    ["Tiny Island"] = Vector3.new(-1019, 22, -1593),
    ["Frost Island"] = Vector3.new(-1096, 13, -1956),
    ["Mythical Island"] = Vector3.new(-1100, 13, -2325),
    ["Eternal Island"] = Vector3.new(-1160, 13, -2655),
    ["Muscle King"] = Vector3.new(-1150, 13, -3005),
    ["Jungle Island"] = Vector3.new(-1200, 13, -3300)
}

for name, pos in pairs(locs) do
    tp:NewButton(name, "Teleporta para " .. name, function()
        plr.Character.HumanoidRootPart.CFrame = CFrame.new(pos)
    end)
end
